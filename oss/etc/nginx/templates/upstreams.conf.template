# Use NGINX's non-blocking DNS resolution
resolver ${DNS_RESOLVERS};

upstream storage_urls {
    # Upstreams are not refreshed until NGINX configuration is reloaded.
    # NGINX Plus will dynamically reload upstreams when DNS records are changed.

    # Be sure to specify the port in the S3_SERVER and be sure that port
    # corresponds to the https/http in the proxy_pass directive.
    server ${S3_SERVER}:${S3_SERVER_PORT};
}

upstream lambda_urls {
    # Upstreams are not refreshed until NGINX configuration is reloaded.
    # NGINX Plus will dynamically reload upstreams when DNS records are changed.

    # Be sure to specify the port in the LAMBDA_SERVER and be sure that port
    # corresponds to the https/http in the proxy_pass directive.
    server ${LAMBDA_SERVER}:${LAMBDA_SERVER_PORT};
    server localhost:8080;
}

# Sample server block for testing proxied backend app as we don't have real app.
#
server {
    # Enable when debugging is needed
    error_log  /var/log/nginx/error.log  debug;
    access_log /var/log/nginx/access.log main;

    listen      8080;
    server_name localhost;

    # For testing a sample API endpoint.
    location /v1/api/example {
        default_type application/json;
        return 200 '{"message": "sample API" }';
    }

    # For testing a sample API endpoint.
    location /2015-03-31/functions/nginx-0213/invocation {
        default_type application/json;
        return 200 '{"message": "Sample: 2015-03-31/functions/nginx-0213/invocation" }';
    }
}
